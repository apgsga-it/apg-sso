pipeline {
    agent any
    
    options {
        timeout(time: 10, unit: "MINUTES")
        timestamps()
    }

    environment {
        def targetKeyCloak = "${env.targetKeyCloak}" 
        def targetHost     = "${targetKeyCloak}.apgsga.ch"
        def targetUser     = "${env.targetUser}"
        def targetKeyCloakBase = "/etc/opt/${targetUser}"
        def targetKeyCloakHome = "/etc/opt/${targetUser}/${targetKeyCloak}"
    }

    stages {
        stage("info") {
            steps {
                echo "Node Name: ${env.NODE_NAME}"
                echo "Executor Number: ${env.EXECUTOR_NUMBER}"
                echo "Source Branch: ${env.BRANCH_NAME}"
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} echo \"Remote Host: \\\$( hostname ), Docker Version: \\\$( docker --version )\" )"
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} echo \"Remote Host: \\\$( hostname ), Docker-Compose Version: \\\$( docker-compose --version )\" )"
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} echo \"Remote Host: \\\$( hostname ), GIT Version: \\\$( git --version )\" )"
            }
        }

        stage("setup") {
            steps {
                echo "make sure the target exists"
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} if [ ! -d ${targetKeyCloakBase} ]; then mkdir ${targetKeyCloakBase}; else echo nothing to do; fi )"
                echo "make sure there is a cloned git repo"
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} if [ ! -d ${targetKeyCloakHome} ]; then git clone git@gitlab.apgsga.ch:apgsga-ops/apg-keycloak.git; else echo nothing to do; fi )"
            }
        }
        stage("download project") {
            steps {
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} cd ${targetKeyCloakHome} && git fetch origin ${targetKeyCloak} )"
            }
        }
        stage("download sw image") {
            steps {
                sh "( ssh -o StrictHostKeyChecking=no ${targetUser}@${targetHost} cd ${targetKeyCloakHome} && docker-compose pull ${targetKeyCloak} )"
            }
        }
    }
}
